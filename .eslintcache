[{"D:\\intern\\porfolio\\src\\reportWebVitals.js":"1","D:\\intern\\porfolio\\src\\App.js":"2","D:\\intern\\porfolio\\src\\index.js":"3","D:\\intern\\porfolio\\src\\task.js":"4","D:\\intern\\porfolio\\src\\data.js":"5","D:\\intern\\porfolio\\src\\Task.js":"6","D:\\blog\\src\\index.js":"7","D:\\blog\\src\\App.js":"8","D:\\blog\\src\\reportWebVitals.js":"9","D:\\blog\\src\\components\\Comments.js":"10","D:\\blog\\src\\components\\Post.js":"11","D:\\blog\\src\\components\\User.js":"12","D:\\blog\\src\\components\\UsersProfile.js":"13","D:\\blog\\src\\components\\Profile.js":"14"},{"size":362,"mtime":1607959138147,"results":"15","hashOfConfig":"16"},{"size":2323,"mtime":1622752391400,"results":"17","hashOfConfig":"18"},{"size":503,"mtime":1608316522107,"results":"19","hashOfConfig":"18"},{"size":688,"mtime":1608402474783,"results":"20","hashOfConfig":"16"},{"size":346,"mtime":1608399515717,"results":"21","hashOfConfig":"18"},{"size":250,"mtime":1608058530239,"results":"22","hashOfConfig":"16"},{"size":503,"mtime":1608316522107,"results":"23","hashOfConfig":"24"},{"size":785,"mtime":1623037770363,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1607959138147,"results":"26","hashOfConfig":"24"},{"size":1805,"mtime":1623037647761,"results":"27","hashOfConfig":"24"},{"size":3952,"mtime":1623037760450,"results":"28","hashOfConfig":"24"},{"size":3310,"mtime":1625585500880,"results":"29","hashOfConfig":"24"},{"size":3087,"mtime":1623037700170,"results":"30","hashOfConfig":"24"},{"size":4598,"mtime":1623037671296,"results":"31","hashOfConfig":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g25pt1",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oatvno",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1nb9n46",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"D:\\intern\\porfolio\\src\\reportWebVitals.js",[],"D:\\intern\\porfolio\\src\\App.js",[],"D:\\intern\\porfolio\\src\\index.js",[],"D:\\intern\\porfolio\\src\\task.js",[],"D:\\intern\\porfolio\\src\\data.js",[],"D:\\intern\\porfolio\\src\\Task.js",[],"D:\\blog\\src\\index.js",[],["63","64"],"D:\\blog\\src\\App.js",[],"D:\\blog\\src\\reportWebVitals.js",[],"D:\\blog\\src\\components\\Comments.js",["65","66"],"D:\\blog\\src\\components\\Post.js",[],"D:\\blog\\src\\components\\User.js",["67","68"],"D:\\blog\\src\\components\\UsersProfile.js",["69","70","71","72"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nexport default function UsersProfile() {\r\n  const { userId } = useParams();\r\n  const [post, setPost] = useState();\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios\r\n        .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then((response) => {\r\n          setPost(response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(`err`, err);\r\n        });\r\n    };\r\n    fetch();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then((res) => {\r\n          setUser(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(`err`, err);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"d-flex justify-content-center mt-3\">\r\n        <Link to=\"/\">\r\n          <button className=\"btn btn-info\">Home</button>\r\n        </Link>\r\n      </div>\r\n      {user &&\r\n        user.map((item) => {\r\n          if (item.id == userId)\r\n            return (\r\n              <div className=\"row mt-5\" key={item.id}>\r\n                <table class=\"table\">\r\n                  <thead class=\"thead-dark\">\r\n                    <th scope=\"row\" colSpan=\"2\" className=\"text-center\">\r\n                      user details\r\n                    </th>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">Name:</th>\r\n                      <td>{item.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Email:</th>\r\n                      <td>{item.email}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Username:</th>\r\n                      <td>{item.username}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Website:</th>\r\n                      <td>{item.website}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Phone:</th>\r\n                      <td>{item.phone}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Zipcode:</th>\r\n                      <td>{item.address.zipcode}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            );\r\n        })}\r\n      {post &&\r\n        post.map((item, index) => {\r\n          if (item.userId == userId)\r\n            return (\r\n              <div className=\"row mt-5 item mb-3\" key={item.id}>\r\n                <div className=\"col-10\">\r\n                  <p>No. {index + 1}</p>\r\n                  <h5>Title: {item.title}</h5>\r\n                  <h6>Description: {item.body}</h6>\r\n                </div>\r\n              </div>\r\n            );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n","D:\\blog\\src\\components\\Profile.js",["73"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const [id, setId] = useState();\r\n  const [mypost, setMypost] = useState();\r\n  const [showForm, setShowForm] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await axios\r\n        .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then((response) => {\r\n          setMypost(response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(`err`, err);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = (id, item) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/posts/${id}`, item)\r\n      .then((res) => {\r\n        alert(\"post deleted successfully\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err`, err);\r\n      });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    setId(id);\r\n    axios\r\n      .get(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n      .then((res) => {\r\n        setTitle(res.data.title);\r\n        setDescription(res.data.body);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err`, err);\r\n      });\r\n\r\n    if (showForm === false) {\r\n      setShowForm(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    const data = { title, description };\r\n    axios\r\n      .put(`https://jsonplaceholder.typicode.com/posts/${id}`, data)\r\n      .then((res) => {\r\n        alert(JSON.stringify(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(`err`, err);\r\n      });\r\n    setShowForm(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <div className=\"d-flex justify-content-center mt-3\">\r\n          <Link to=\"/\">\r\n            <button className=\"btn btn-info\">Home</button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"task-header d-flex justify-content-between pl-5 pr-5\">\r\n          <h2 className=\"text-center\">My Posts</h2>\r\n        </div>\r\n        {showForm && (\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8 bg-light p-4\">\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"Title\"\r\n                  value={title}\r\n                  placeholder=\"Post Title\"\r\n                  ref={register({ required: true })}\r\n                  onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                  }}\r\n                />{\" \"}\r\n                <br></br>\r\n                <span className=\"text-danger\">\r\n                  {errors.Title && \"Post Title is required\"}\r\n                </span>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  name=\"Description\"\r\n                  value={description}\r\n                  placeholder=\"Description\"\r\n                  ref={register({ required: true })}\r\n                  onChange={(e) => {\r\n                    setDescription(e.target.value);\r\n                  }}\r\n                />{\" \"}\r\n                {errors.Priority && \"Description is required\"}\r\n                <br></br>\r\n                <input className=\"btn btn-success\" type=\"submit\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {mypost &&\r\n          mypost.map((item, index) => {\r\n            if (item.userId === 2)\r\n              return (\r\n                <div className=\"row mt-5 item\" key={item.id}>\r\n                  <div className=\"col-10\">\r\n                    <p>No. {index + 1}</p>\r\n                    <h5>Title: {item.title}</h5>\r\n                    <h6>Description: {item.body}</h6>\r\n                  </div>\r\n                  <div className=\"col-2 align-self-center\">\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => handleDelete(item.id, item)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-primary ml-2\"\r\n                      onClick={() => handleUpdate(item.id)}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":24,"column":6,"nodeType":"80","endLine":24,"endColumn":8,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"79","line":38,"column":6,"nodeType":"80","endLine":38,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":74,"column":30,"nodeType":"85","messageId":"86","endLine":74,"endColumn":32},{"ruleId":"83","severity":1,"message":"87","line":91,"column":26,"nodeType":"85","messageId":"86","endLine":91,"endColumn":28},{"ruleId":"83","severity":1,"message":"88","line":47,"column":25,"nodeType":"85","messageId":"86","endLine":47,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":48,"column":23,"nodeType":"91","messageId":"92","endLine":48,"endColumn":25},{"ruleId":"83","severity":1,"message":"88","line":88,"column":32,"nodeType":"85","messageId":"86","endLine":88,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":89,"column":27,"nodeType":"91","messageId":"92","endLine":89,"endColumn":29},{"ruleId":"83","severity":1,"message":"88","line":117,"column":36,"nodeType":"85","messageId":"86","endLine":117,"endColumn":38},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postid'. Either include it or remove the dependency array.","ArrayExpression",["95"],["96"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.sort() expects a value to be returned at the end of arrow function.","Array.prototype.map() expects a value to be returned at the end of arrow function.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [postid]",{"range":"100","text":"101"},{"range":"102","text":"101"},[676,678],"[postid]",[1029,1031]]